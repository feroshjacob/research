/*
* generated by Xtext
*/
package cs.ua.edu.segroup.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import cs.ua.edu.segroup.services.MDPGrammarAccess;

public class MDPParser extends AbstractContentAssistParser {
	
	@Inject
	private MDPGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected cs.ua.edu.segroup.ui.contentassist.antlr.internal.InternalMDPParser createParser() {
		cs.ua.edu.segroup.ui.contentassist.antlr.internal.InternalMDPParser result = new cs.ua.edu.segroup.ui.contentassist.antlr.internal.InternalMDPParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMDPAccess().getGroup(), "rule__MDP__Group__0");
					put(grammarAccess.getMAPAccess().getGroup(), "rule__MAP__Group__0");
					put(grammarAccess.getREDAccess().getGroup(), "rule__RED__Group__0");
					put(grammarAccess.getMDPAccess().getMapAssignment_0(), "rule__MDP__MapAssignment_0");
					put(grammarAccess.getMDPAccess().getRedAssignment_1(), "rule__MDP__RedAssignment_1");
					put(grammarAccess.getMAPAccess().getMapCodeAssignment_1(), "rule__MAP__MapCodeAssignment_1");
					put(grammarAccess.getREDAccess().getCodeForAssignment_1(), "rule__RED__CodeForAssignment_1");
					put(grammarAccess.getREDAccess().getCodeRestAssignment_2(), "rule__RED__CodeRestAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			cs.ua.edu.segroup.ui.contentassist.antlr.internal.InternalMDPParser typedParser = (cs.ua.edu.segroup.ui.contentassist.antlr.internal.InternalMDPParser) parser;
			typedParser.entryRuleMDP();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MDPGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MDPGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
